// pages/page-company.js

// pages/page-company.js

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
async function addCompany() {
  const name = document.getElementById('companyName').value;
  const address = document.getElementById('companyAddress').value;
  const contact = document.getElementById('companyContact').value;
  const standards = document.getElementById('companyStandards').value;

  if (!name) {
    alert('–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è');
    return;
  }

  try {
    const db = window.db;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID
    const companyId = `COMPANY-${Date.now()}`;

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ
    const company = {
      id: companyId,
      name,
      address: address || null,
      contact: contact || null,
      standards: standards ? standards.split(',').map(s => s.trim()) : [],
      createdAt: new Date().toISOString(),
      items: [], // –°–ø–∏—Å–æ–∫ –∏–∑–¥–µ–ª–∏–π
      ncr_count: 0,
      last_update: new Date().toISOString()
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º
    await db.collection('companies').doc(companyId).set(company);

    // –£—Å–ø–µ—Ö
    document.getElementById('companyAddResult').innerHTML = `
      ‚úÖ –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: <strong>${companyId}</strong><br>
      –ù–∞–∑–≤–∞–Ω–∏–µ: ${name}
    `;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–∫–∏
    loadCompaniesList();
    loadCompaniesForStats();

    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('companyName').value = '';
    document.getElementById('companyAddress').value = '';
    document.getElementById('companyContact').value = '';
    document.getElementById('companyStandards').value = '';

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:', error);
    document.getElementById('companyAddResult').innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π
async function loadCompaniesList() {
  try {
    const db = window.db;
    const snapshot = await db.collection('companies')
      .orderBy('createdAt', 'desc')
      .get();

    let html = '';
    snapshot.forEach(doc => {
      const company = doc.data();
      // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ standards
      const standardsText = (company.standards && Array.isArray(company.standards) && company.standards.length > 0) 
        ? company.standards.join(', ') 
        : '‚Äî';
      
      html += `
        <div class="company-card">
          <strong>${company.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</strong><br>
          ID: ${company.id || '‚Äî'}<br>
          –ö–æ–Ω—Ç–∞–∫—Ç: ${company.contact || '‚Äî'}<br>
          –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã: ${standardsText}
        </div>
        <hr>
      `;
    });

    document.getElementById('companiesList').innerHTML = html || '–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–µ—Ç';

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π:', error);
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async function loadCompaniesForStats() {
  try {
    const db = window.db;
    const snapshot = await db.collection('companies')
      .orderBy('name')
      .get();

    const select = document.getElementById('companyForStats');
    select.innerHTML = '<option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ --</option>';

    snapshot.forEach(doc => {
      const company = doc.data();
      const option = document.createElement('option');
      option.value = company.id || '';
      option.textContent = company.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
      select.appendChild(option);
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
  }
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é
async function loadCompanyStatistics() {
  const companyId = document.getElementById('companyForStats').value;
  if (!companyId) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ');
    return;
  }

  try {
    const db = window.db;
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ
    const companyDoc = await db.collection('companies').doc(companyId).get();
    if (!companyDoc.exists) {
      throw new Error('–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    const company = companyDoc.data();

    // –ü–æ–ª—É—á–∞–µ–º –∏–∑–¥–µ–ª–∏—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
    const itemsSnapshot = await db.collection('items')
      .where('manufacturer', '==', company.name)
      .get();

    // –ü–æ–ª—É—á–∞–µ–º NCR –ø–æ —ç—Ç–∏–º –∏–∑–¥–µ–ª–∏—è–º
    const itemIds = itemsSnapshot.docs.map(doc => doc.id);
    let totalNCR = 0;

    if (itemIds.length > 0) {
      const ncrsSnapshot = await db.collection('ncrs')
        .where('item_id', 'in', itemIds.slice(0, 10)) // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Firestore
        .get();
      totalNCR = ncrsSnapshot.size;
    }

    // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ standards
    const standardsText = (company.standards && Array.isArray(company.standards) && company.standards.length > 0) 
      ? company.standards.join(', ') 
      : '‚Äî';

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º
    document.getElementById('companyStatsResult').innerHTML = `
      <div class="stats-card">
        <h3>üè≠ ${company.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h3>
        <p><strong>–ò–∑–¥–µ–ª–∏–π:</strong> ${itemsSnapshot.size}</p>
        <p><strong>–ê–∫—Ç–æ–≤ NCR:</strong> ${totalNCR}</p>
        <p><strong>–£—Ä–æ–≤–µ–Ω—å –±—Ä–∞–∫–∞:</strong> ${itemsSnapshot.size > 0 ? ((totalNCR / itemsSnapshot.size) * 100).toFixed(1) : 0}%</p>
        <p><strong>–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã:</strong> ${standardsText}</p>
        <p><strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</strong> ${company.last_update ? new Date(company.last_update).toLocaleDateString() : '‚Äî'}</p>
      </div>
    `;

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    document.getElementById('companyStatsResult').innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
  }
}

// –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
  loadCompaniesList();
  loadCompaniesForStats();
});
// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
// async function addCompany() {
//     const name = document.getElementById('companyName').value;
//     const address = document.getElementById('companyAddress').value;
//     const contact = document.getElementById('companyContact').value;
//     const standards = document.getElementById('companyStandards').value;
  
//     if (!name) {
//       alert('–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è');
//       return;
//     }
  
//     try {
//       const db = window.db;
      
//       // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID
//       const companyId = `COMPANY-${Date.now()}`;
  
//       // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ
//       const company = {
//         id: companyId,
//         name,
//         address: address || null,
//         contact: contact || null,
//         standards: standards ? standards.split(',').map(s => s.trim()) : [],
//         createdAt: new Date().toISOString(),
//         items: [], // –°–ø–∏—Å–æ–∫ –∏–∑–¥–µ–ª–∏–π
//         ncr_count: 0,
//         last_update: new Date().toISOString()
//       };
  
//       // –°–æ—Ö—Ä–∞–Ω—è–µ–º
//       await db.collection('companies').doc(companyId).set(company);
  
//       // –£—Å–ø–µ—Ö
//       document.getElementById('companyAddResult').innerHTML = `
//         ‚úÖ –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: <strong>${companyId}</strong><br>
//         –ù–∞–∑–≤–∞–Ω–∏–µ: ${name}
//       `;
  
//       // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–∫–∏
//       loadCompaniesList();
//       loadCompaniesForStats();
  
//       // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
//       document.getElementById('companyName').value = '';
//       document.getElementById('companyAddress').value = '';
//       document.getElementById('companyContact').value = '';
//       document.getElementById('companyStandards').value = '';
  
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:', error);
//       document.getElementById('companyAddResult').innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
//     }
//   }
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π
  async function loadCompaniesList() {
    try {
      const db = window.db;
      const snapshot = await db.collection('companies')
        .orderBy('createdAt', 'desc')
        .get();
  
      let html = '';
      snapshot.forEach(doc => {
        const company = doc.data();
        html += `
          <div class="company-card">
            <strong>${company.name}</strong><br>
            ID: ${company.id}<br>
            –ö–æ–Ω—Ç–∞–∫—Ç: ${company.contact || '‚Äî'}<br>
            –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã: ${(company.standards && Array.isArray(company.standards)) ? company.standards.join(', ') : '‚Äî'}

          </div>
          <hr>
        `;
      });
  
      document.getElementById('companiesList').innerHTML = html || '–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–µ—Ç';
  
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π:', error);
    }
  }
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  async function loadCompaniesForStats() {
    try {
      const db = window.db;
      const snapshot = await db.collection('companies')
        .orderBy('name')
        .get();
  
      const select = document.getElementById('companyForStats');
      select.innerHTML = '<option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ --</option>';
  
      snapshot.forEach(doc => {
        const company = doc.data();
        const option = document.createElement('option');
        option.value = company.id;
        option.textContent = company.name;
        select.appendChild(option);
      });
  
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
  }
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é
  async function loadCompanyStatistics() {
    const companyId = document.getElementById('companyForStats').value;
    if (!companyId) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ');
      return;
    }
  
    try {
      const db = window.db;
      
      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ
      const companyDoc = await db.collection('companies').doc(companyId).get();
      if (!companyDoc.exists) {
        throw new Error('–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      const company = companyDoc.data();
  
      // –ü–æ–ª—É—á–∞–µ–º –∏–∑–¥–µ–ª–∏—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
      const itemsSnapshot = await db.collection('items')
        .where('manufacturer', '==', company.name)
        .get();
  
      // –ü–æ–ª—É—á–∞–µ–º NCR –ø–æ —ç—Ç–∏–º –∏–∑–¥–µ–ª–∏—è–º
      const itemIds = itemsSnapshot.docs.map(doc => doc.id);
      let totalNCR = 0;
  
      if (itemIds.length > 0) {
        const ncrsSnapshot = await db.collection('ncrs')
          .where('item_id', 'in', itemIds.slice(0, 10)) // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Firestore
          .get();
        totalNCR = ncrsSnapshot.size;
      }
  
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º
      document.getElementById('companyStatsResult').innerHTML = `
        <div class="stats-card">
          <h3>üè≠ ${company.name}</h3>
          <p><strong>–ò–∑–¥–µ–ª–∏–π:</strong> ${itemsSnapshot.size}</p>
          <p><strong>–ê–∫—Ç–æ–≤ NCR:</strong> ${totalNCR}</p>
          <p><strong>–£—Ä–æ–≤–µ–Ω—å –±—Ä–∞–∫–∞:</strong> ${itemsSnapshot.size > 0 ? ((totalNCR / itemsSnapshot.size) * 100).toFixed(1) : 0}%</p>

          <strong>–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã:</strong> ${(company.standards && Array.isArray(company.standards)) ? company.standards.join(', ') : '‚Äî'}</p>
          <p><strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</strong> ${new Date(company.last_update).toLocaleDateString()}</p>
        </div>
      `;
  
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      document.getElementById('companyStatsResult').innerHTML = `‚ùå –û—à–∏–±–∫–∞: ${error.message}`;
    }
  }
  
  // –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  document.addEventListener('DOMContentLoaded', function() {
    loadCompaniesList();
    loadCompaniesForStats();
  });